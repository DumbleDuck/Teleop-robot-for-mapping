<?xml version= "1.0"?>
<robot name="rc_car" xmlns:xacro="http://ros.org/wiki/xacro">
 
 <xacro:property name="ch_w" value="0.2"/>
 <xacro:property name="ch_l" value="0.5"/>
 <xacro:property name="ch_h" value="0.1"/>
 <xacro:property name="wheel_pos_y" value="0.14"/>
 <xacro:property name="wheel_dia" value="0.1215"/>

 <material name="orange">
  <color rgba="1 .64  0  1"/>
 </material>

 <material name="black">
  <color rgba="1 1 1 1"/>
 </material>

<!-- Dummy link -->

 <link name ="dummy">
 </link> 

<!-- Inertial Macro -->

 <xacro:macro name="in_inert" params="mass name">
  <xacro:if value="${name =='chassis'}">
    <inertial>
     <mass value="${mass}"/>
     <inertia ixx="${mass*0.00414500685}" ixy="0.0" ixz="0.0" iyy="${mass*0.01911488783}" iyz="0.0" izz="${mass*0.02164626315}"/> 
     <origin xyz="0 0 ${(wheel_dia/2)+ 0.027631}" rpy="0 0 0"/> 
    </inertial>
  </xacro:if>
  <xacro:if value="${name =='wheel'}">
    <inertial>
     <mass value="${mass}"/>
     <inertia ixx="${mass*0.001121829}" ixy="0.0" ixz="0.0" iyy="${mass*0.00209365961}" iyz="0.0" izz="${mass*0.001121829}"/>
    </inertial>
  </xacro:if>
 </xacro:macro>
 
<!-- Chassis Link Definition -->
 
 <link name="chassis">
   <visual>  
     <origin xyz="0 0 ${(wheel_dia/2)+.03}" rpy="0 0 0"/>
     <geometry>
       <mesh filename= "package://rc_car/meshes/Chassis.dae"/>
     </geometry>
     <!--  <material name="orange"/>  Uncomment for Rviz -->
   </visual>
   
   <collision>
     <origin xyz="0 0 ${(wheel_dia/2)+.03}" rpy="0 0 0"/>
     <geometry>
        <mesh filename= "package://rc_car/meshes/Chassis.dae"/>
     </geometry>
   </collision>
   <xacro:in_inert mass="1" name="chassis"/>
 </link>

 <gazebo reference="chassis">
   <material>Gazebo/Orange</material>
 </gazebo>

<!-- Dummy Joint -->
 <joint name="dummy_joint" type="fixed">
  <parent link="dummy"/>
  <child link="chassis"/>
 </joint> 

<!-- Wheel Definition -->

 <xacro:macro name="wheel" params="pos width ref_x ref_y">
  <link name="${pos}_wheel">
    <visual>
      <geometry>
       <mesh filename= "package://rc_car/meshes/Wheel.dae"/>
      </geometry>
      <origin xyz="0 0 0" rpy="0 0 ${radians(90)} "/>
      <!--  <material name="black"/> Uncomment for Rviz -->
    </visual>

    <collision>
      <geometry>
       <mesh filename= "package://rc_car/meshes/Wheel.dae"/>
      </geometry>
      <origin xyz="0 0 0" rpy="0 0 ${radians(90)}"/>
    </collision>
    <xacro:in_inert mass=".2" name="wheel"/>
  </link>

  <joint name="${pos}_wheel_to_chassis" type="continuous">
    <axis xyz="0 1 0" rpy="0 0 0"/>
    <parent link="chassis"/>
    <child link="${pos}_wheel"/>
    <origin xyz="${ref_x*wheel_pos_y} ${ref_y*(width+ch_w)/2} ${wheel_dia/2}" rpy="0 0 0"/>
  </joint>
  <gazebo reference="${pos}_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
 </xacro:macro>

<!-- Hokuyo Laser Scanner -->

 <link name="laser_link">
  <visual>
   <geometry>
    <cylinder length=".02" radius=".05"/>
   </geometry>
   <origin xyz="0 0 0 " rpy="0 0 0"/>
  </visual>
  <collision>  
   <geometry>
    <cylinder length=".02" radius=".05"/>
   </geometry>
   <origin xyz="0 0 0" rpy="0 0 0"/>  
  </collision>
  <inertial>
   <mass value=".00001"/>
   <origin xyz="0 0 0" rpy="0 0 0"/>
   <inertia ixx=".000001" ixy="0" ixz="0" iyy=".000001" iyz="0" izz=".000001"/>
  </inertial> 
 </link>

 <joint name="laser_joint" type="fixed">
  <parent link="chassis"/>
  <child link="laser_link"/>
  <origin xyz="0 0 ${(wheel_dia/2)+.09}" rpy="0 0 0"/>
  <axis xyz="0 0 1" rpy="0 0 0"/>
 </joint>
 
 <gazebo reference="laser_link">
   <material>Gazebo/Grey</material>
 </gazebo>

<!-- Calling Wheel Macro -->

 <xacro:wheel pos="front_right" width=".03" ref_x="1.0" ref_y="-1.0"/>
 <xacro:wheel pos="rear_right" width=".03" ref_x="-1.0" ref_y="-1.0"/>
 <xacro:wheel pos="front_left" width=".03" ref_x="1.0" ref_y="1.0"/>
 <xacro:wheel pos="rear_left" width=".03" ref_x="-1.0" ref_y="1.0"/>


<!-- Differential drive plugin 

 <gazebo>
  <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
    <leftJoint>rear_left_wheel_to_chassis</leftJoint>
    <rightJoint>rear_right_wheel_to_chassis</rightJoint>
    <robotBaseFrame>chassis</robotBaseFrame>
    <wheelSeparation>${ch_w}</wheelSeparation>
    <wheelDiameter>${wheel_dia}</wheelDiameter>
    <commandTopic>cmd_vel</commandTopic>
    <odometryTopic>odom</odometryTopic>
    <odometryFrame>odom</odometryFrame>
    <publishWheelJointState>false</publishWheelJointState>
    <alwaysOn>true</alwaysOn>
    <legacyMode>false</legacyMode>
    <updateRate>40</updateRate>
    <wheelTorque>5</wheelTorque>
    <odometrySource>world</odometrySource>
    <publishWheelTF>false</publishWheelTF>
    <wheelAcceleration>0</wheelAcceleration>
    <rosDebugLevel>na</rosDebugLevel>
    <publishOdomTF>true</publishOdomTF>
    <publishTf>true</publishTf>
  </plugin>
 </gazebo>

-->

<!-- Skid Steer plugin -->

 <gazebo>
   <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
     <updateRate>100.0</updateRate>
     <robotNamespace>/</robotNamespace>
     <commandTopic>cmd_vel</commandTopic>
     <leftFrontJoint>front_left_wheel_to_chassis</leftFrontJoint>
     <rightFrontJoint>front_right_wheel_to_chassis</rightFrontJoint>
     <leftRearJoint>rear_left_wheel_to_chassis</leftRearJoint>
     <rightRearJoint>rear_right_wheel_to_chassis</rightRearJoint>
     <wheelSeparation>${ch_w}</wheelSeparation>
     <wheelDiameter>${wheel_dia}</wheelDiameter>
     <robotBaseFrame>chassis</robotBaseFrame>
     <torque>5</torque>
     <odometryFrame>odom</odometryFrame>
     <odometryTopic>odom</odometryTopic>
     <topicName>cmd_vel</topicName>
     <broadcastTF>true</broadcastTF>
     <covariance_yaw>0.01</covariance_yaw>
     <covariance_y>0.0001</covariance_y>
     <covariance_x>0.0001</covariance_x>
   </plugin>
 </gazebo>

<!-- Joint State Publisher --> 

 <gazebo>
  <plugin name="joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
   <jointName>front_right_wheel_to_chassis,front_left_wheel_to_chassis,rear_right_wheel_to_chassis,rear_left_wheel_to_chassis</jointName>
   <updateRate>100</updateRate>
  </plugin>
 </gazebo>

<!-- Laser Scanner definition -->

 <gazebo reference="laser_link">
  <sensor type="gpu_ray" name="hokuyo">
   <pose>0 0 0 0 0 0</pose>
   <visualize>true</visualize>
   <update_rate>40</update_rate>
   <ray>
    <scan>
     <horizontal>
       <samples>720</samples>
       <resolution>1</resolution>
       <min_angle>-1.570796</min_angle>
       <max_angle>1.570796</max_angle>
     </horizontal>
    </scan>
    <range>
     <min>0.10</min>
     <max>30.0</max>
     <resolution>0.01</resolution>
    </range>
   </ray>
   <plugin name="gpu_laser" filename="libgazebo_ros_gpu_laser.so">
     <topicName>/scan</topicName>
     <frameName>laser_link</frameName>
   </plugin>
  </sensor>
 </gazebo>


</robot>

